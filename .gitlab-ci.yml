# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/README.html#stages

image: python:3.9-alpine

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - apk add gcc g++ libffi-dev libc-dev musl-dev make bash
  - pip install --upgrade pip
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

stages:          # List of stages for jobs, and their order of execution
  - tests-and-analysis
  - make-documents

static-analysis-job:       # This job runs in the build stage, which runs first.
  stage: tests-and-analysis
  script:
    - pip install -r requirements.txt
    - make run-static-analysis

unit-test-job:   # This job runs in the test stage.
  stage: tests-and-analysis    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Tests not implemented yet"

pages:
  stage: make-documents
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH