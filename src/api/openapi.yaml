openapi: 3.0.1
info:
  title: Damian Giebas Connexion TrainingApp
  description: This app was created for self study
  version: 0.0.1
servers:
  - url: /api
paths:
  /health:
    get:
      summary: Health endpoint
      description: Is api alive
      operationId: api.webapp.health.health
      responses:
        '200':
          description: Api is alive
  /animals:
    get:
      tags:
        - "animal"
      summary: "Get all animals"
      description: ""
      operationId: api.webapp.animal.animals
      responses:
        "200":
          description: "All animals"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnimalResponse"
  /animal:
    post:
      tags:
        - "animal"
      summary: "Add animal to database"
      description: ""
      operationId: api.webapp.animal.add_animal
      requestBody:
        description: Animal object
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AnimalRequest"
        required: true
      responses:
        "201":
          description: "Created"
        "405":
          description: "Invalid input"
        "415":
          description: "Incorrect file content"
components:
  schemas:
    AnimalResponse:
      type: "object"
      required:
        - "id"
        - "name"
        - "description"
      properties:
        id:
          type: "integer"
          format: "bigint"
        name:
          type: "string"
          example: "T-Rex"
        description:
          type: "string"
          example: "Great predator and a big lizard"
        image_key:
          type: "string"
          nullable: true
          example: "1234-4356-asdv.png"
        bucket_name:
          type: "string"
          nullable: true
          example: "image-bucket"
        image:
          type: "string"
          nullable: true
          format: "uri"
          example: "http://example.com/Dog.PNG"
    AnimalRequest:
      type: "object"
      required:
        - "name"
        - "description"
      properties:
        name:
          type: "string"
          example: "T-Rex"
        description:
          type: "string"
          minLength: 3
          example: "Great predator and a big lizard"
        image:
          type: "string"
          example: "Dog.PNG"
          format: "binary"
